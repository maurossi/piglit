# Test generated by:
# ../../variable-index-write.sh 1.00

[require]
GLSL ES >= 1.00
GL ES >= 2.0

[vertex shader]
attribute vec4 vertex;
mat4 projection = mat4(
    2.0/250.0, 0.0, 0.0, -1.0,
    0.0, 2.0/250.0, 0.0, -1.0,
    0.0, 0.0, -1.0, 0.0,
    0.0, 0.0, 0.0, 1.0);
uniform mat2 src_matrix;
uniform vec2 v;
uniform vec2 expect;
uniform int row;
uniform int col;
uniform float value;
varying mat2 dst_matrix;

void main()
{
    gl_Position = vertex;
    gl_Position *= projection;


    /* Patch the supplied matrix with the supplied value.  If the resulting
     * matrix is correct, it will transform the input vector to the expected
     * value.  Verify that the distance between the result and the expected
     * vector is less than epsilon.
     */
    dst_matrix = src_matrix;
    dst_matrix[1][row] = value;
}

[fragment shader]
uniform mat2 src_matrix;
uniform vec2 v;
uniform vec2 expect;
uniform int row;
uniform int col;
uniform float value;
varying mat2 dst_matrix;

void main()
{
    gl_FragColor = (distance(dst_matrix * v, expect) < 1e-6)
        ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);
}

[test]
clear color 0.5 0.5 0.5 0.5
clear

uniform int row 0
uniform vec2 v 0.803161418975390 0.852987140792140
uniform vec2 expect 0.708718134966688 1.452243795483797
uniform mat2x2 src_matrix 0.241498998195656 0.861223395812970 666.0 0.891622340451180
uniform float value 0.603473877011433
draw rect 20 5 10 10
probe rgb 25 10 0.0 1.0 0.0

uniform int row 1
uniform vec2 v 0.803161418975390 0.852987140792140
uniform vec2 expect 0.708718134966688 1.452243795483797
uniform mat2x2 src_matrix 0.241498998195656 0.861223395812970 0.603473877011433 666.0
uniform float value 0.891622340451180
draw rect 20 20 10 10
probe rgb 25 25 0.0 1.0 0.0

clear
